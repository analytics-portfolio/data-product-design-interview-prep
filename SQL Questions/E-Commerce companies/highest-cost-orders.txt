Question: Highest Cost Orders
Source: stratascrach
Companies: Amazon, Shopify

Find the customer with the highest daily total order cost between 2019-02-01 to 2019-05-01.
If a customer had more than one order on a certain day, sum the order costs on a daily basis.
Output the customer's first name, total cost of their items, and the date.
For simplicity, you can assume that every first name in the dataset is unique.

customers table:
address:       text
city:          text
first_name:    text
id:            bigint
last_name:     text
phone_number:  text

orders table:
cust_id:          bigint
id:               bigint
order_date:       date
order_details:    text
total_order_cost: bigint

--- SOLUTION ---
WITH cust_order_cost_by_date AS (
    SELECT 
        cust_id, 
        order_date, 
        SUM(total_order_cost) AS order_cost_by_date
    FROM orders 
    GROUP BY cust_id, order_date
    HAVING order_date < '2019-05-01'
    AND order_date > '2019-02-01'
)

SELECT 
    t2.first_name, 
    t1.order_date,
    t1.order_cost_by_date
FROM 
cust_order_cost_by_date t1 
LEFT JOIN customers t2
ON t1.cust_id = t2.id
WHERE t1.order_cost_by_date = (SELECT MAX(order_cost_by_date)
                                FROM cust_order_cost_by_date)


--- WALKTHROUGH ---


